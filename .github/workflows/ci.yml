name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.2.23

    - name: Install Turborepo CLI
      run: bun install --global turbo

    - name: Cache Turborepo
      uses: actions/cache@v3
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run type checking with Turborepo
      run: turbo run typecheck:all

    - name: Run linting with Turborepo
      run: turbo run lint:all

    - name: Run tests with Turborepo
      run: turbo run test:all

    - name: Build packages with Turborepo
      run: turbo run build:all

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.2.23

    - name: Run security audit
      run: |
        bun install --frozen-lockfile
        bun audit

  release:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.2.23

    - name: Install Turborepo CLI
      run: bun install --global turbo

    - name: Cache Turborepo
      uses: actions/cache@v3
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Build with Turborepo
      run: turbo run build:all

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false